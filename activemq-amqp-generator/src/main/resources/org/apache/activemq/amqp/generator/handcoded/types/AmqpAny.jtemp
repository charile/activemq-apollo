/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * his work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.activemq.amqp.generator.handcoded.types;

import java.io.*;
import org.apache.activemq.amqp.v1pr2.*;

public class AmqpAny {

    private byte [] value;

    public final void setValue(byte [] value) {
        this.value = value;
    }

    public final byte [] getValue() {
        return value;
    }

    public final long getEncodedSize() throws IOException{

        chooseEncoding();
        return encoding.getEncodedSize(value);
    }

    public final void marshal(DataOutputStream dos, byte [] val) throws IOException {
        chooseEncoding();
        dos.writeByte(encoding.getFormatCode());    }

    public final void chooseEncoding() throws IOException {
        if(encoding == null) {
            encoding = AmqpMarshaller.choose*Encoding(value);
        }
    }

}