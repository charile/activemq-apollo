- import it._
- val helper = new org.apache.activemq.apollo.web.resources.ViewHelper
- import helper._
- import java.util.concurrent.TimeUnit._

%p state: #{state} for #{ uptime(state_since) }

%h2 Cancel Stats
%p canceled message stores: #{canceled_message_counter}
%p canceled message enqueues: #{canceled_enqueue_counter}

%h2 Flush Stats
%p flushed message stores: #{flushed_message_counter}
%p flushed message enqueues: #{flushed_enqueue_counter}

%h2 Store Latency Stats

- def show(name:String, value:TimeMetricDTO)
  %p #{name} : average #{value.avg(MILLISECONDS)} ms,  min #{value.min(MILLISECONDS)} ms, max #{value.max(MILLISECONDS)} ms, #{value.count} events

- show("Message load latency", message_load_latency)
- show("UOW flush latency", flush_latency)
- show("Journal append latency", journal_append_latency)
- show("Index update latency", index_update_latency)
